[
  {
    "name": "DHT11",
    "contract": {
      "variables": [
        {
          "statement": "global_variable",
          "type": "address",
          "name": "manager",
          "scope": "public",
          "value": ""
        },
        {
          "statement": "global_variable",
          "type": "uint",
          "name": "temperature",
          "scope": "public",
          "value": ""
        },
        {
          "statement": "global_variable",
          "type": "uint",
          "name": "maxTemperature",
          "scope": "public",
          "value": ""
        },
        {
          "statement": "global_variable",
          "type": "uint",
          "name": "minTemperature",
          "scope": "public",
          "value": ""
        },
        {
          "statement": "global_variable",
          "type": "uint",
          "name": "humidity",
          "scope": "public",
          "value": ""
        },
        {
          "statement": "global_variable",
          "type": "uint",
          "name": "maxHumidity",
          "scope": "public",
          "value": ""
        },
        {
          "statement": "global_variable",
          "type": "uint",
          "name": "minHumidity",
          "scope": "public",
          "value": ""
        }
      ],
      "events": [
        {
          "statement": "event",
          "name": "temperatureOverflow",
          "inputs": [{ "name": "temperature", "type": "uint" }]
        },
        {
          "statement": "event",
          "name": "temperatureUnderflow",
          "inputs": [{ "name": "temperature", "type": "uint" }]
        },
        {
          "statement": "event",
          "name": "humidityOverflow",
          "inputs": [{ "name": "humidity", "type": "uint" }]
        },
        {
          "statement": "event",
          "name": "humidityUnderflow",
          "inputs": [{ "name": "humidity", "type": "uint" }]
        }
      ],
      "functions": [
        {
          "name": "",
          "scope": "public",
          "isConstructor": true,
          "inputs": [
            {
              "name": "_owner",
              "type": "address"
            }
          ],
          "outputs": [],
          "modifiers": [],
          "content": [
            {
              "statement": "assignment",
              "variable": "manager",
              "value": {
                "statement": "expression",
                "value": "_owner"
              }
            },
            {
              "statement": "assignment",
              "variable": "maxTemperature",
              "value": {
                "statement": "expression",
                "value": "10"
              }
            },
            {
              "statement": "assignment",
              "variable": "minTemperature",
              "value": {
                "statement": "expression",
                "value": "0"
              }
            },
            {
              "statement": "assignment",
              "variable": "maxHumidity",
              "value": {
                "statement": "expression",
                "value": "10"
              }
            },
            {
              "statement": "assignment",
              "variable": "minHumidity",
              "value": {
                "statement": "expression",
                "value": "0"
              }
            }
          ]
        },
        {
          "name": "setMaxTemperature",
          "scope": "public",
          "isConstructor": false,
          "inputs": [{ "name": "_maxTemperature", "type": "uint" }],
          "outputs": [],
          "modifiers": [],
          "content": [
            {
              "statement": "assignment",
              "variable": "maxTemperature",
              "value": { "statement": "expression", "value": "_maxTemperature" }
            }
          ]
        },
        {
          "name": "setMinTemperature",
          "scope": "public",
          "isConstructor": false,
          "inputs": [{ "name": "_minTemperature", "type": "uint" }],
          "outputs": [],
          "modifiers": [],
          "content": [
            {
              "statement": "assignment",
              "variable": "minTemperature",
              "value": { "statement": "expression", "value": "_minTemperature" }
            }
          ]
        },
        {
          "name": "setMaxHumidity",
          "scope": "public",
          "isConstructor": false,
          "inputs": [{ "name": "_maxHumidity", "type": "uint" }],
          "outputs": [],
          "modifiers": [],
          "content": [
            {
              "statement": "assignment",
              "variable": "maxHumidity",
              "value": { "statement": "expression", "value": "_maxHumidity" }
            }
          ]
        },
        {
          "name": "setMinHumidity",
          "scope": "public",
          "isConstructor": false,
          "inputs": [{ "name": "_minHumidity", "type": "uint" }],
          "outputs": [],
          "modifiers": [],
          "content": [
            {
              "statement": "assignment",
              "variable": "minHumidity",
              "value": { "statement": "expression", "value": "_minHumidity" }
            }
          ]
        },
        {
          "name": "getValues",
          "scope": "public",
          "isConstructor": false,
          "inputs": [],
          "outputs": ["temperature", "humidity"],
          "modifiers": [],
          "content": []
        },
        {
          "name": "setTemperature",
          "scope": "public",
          "isConstructor": false,
          "inputs": [
            {
              "name": "_temperature",
              "type": "uint"
            }
          ],
          "outputs": [],
          "modifiers": [],
          "content": [
            {
              "statement": "assignment",
              "variable": "temperature",
              "value": {
                "statement": "expression",
                "value": "_temperature"
              }
            },
            {
              "statement": "if",
              "else": false,
              "condition": "temperature <= maxTemperature",
              "content": [
                {
                  "statement": "event_call",
                  "name": "temperatureOverflow",
                  "variables": ["temperature"]
                }
              ]
            },
            {
              "statement": "if",
              "else": false,
              "condition": "temperature >= minTemperature",
              "content": [
                {
                  "statement": "event_call",
                  "name": "temperatureUnderflow",
                  "variables": ["temperature"]
                }
              ]
            }
          ]
        },
        {
          "name": "setHumidity",
          "scope": "public",
          "isConstructor": false,
          "inputs": [
            {
              "name": "_humidity",
              "type": "uint"
            }
          ],
          "outputs": [],
          "modifiers": [],
          "content": [
            {
              "statement": "assignment",
              "variable": "humidity",
              "value": {
                "statement": "expression",
                "value": "_humidity"
              }
            },
            {
              "statement": "if",
              "else": false,
              "condition": "humidity <= maxHumidity",
              "content": [
                {
                  "statement": "event_call",
                  "name": "humidityOverflow",
                  "variables": ["humidity"]
                }
              ]
            },
            {
              "statement": "if",
              "else": false,
              "condition": "humidity >= minHumidity",
              "content": [
                {
                  "statement": "event_call",
                  "name": "humidityUnderflow",
                  "variables": ["humidity"]
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "name": "DHT11Controller",
    "contract": {
      "variables": [
        {
          "statement": "global_variable",
          "type": "DHT11[]",
          "name": "contracts",
          "scope": "public",
          "value": ""
        },
        {
          "statement": "global_variable",
          "type": "uint",
          "name": "counter",
          "scope": "private",
          "value": "0"
        }
      ],
      "events": [],
      "functions": [
        {
          "name": "createContract",
          "scope": "public",
          "isConstructor": false,
          "inputs": [
            {
              "name": "_owner",
              "type": "address"
            }
          ],
          "outputs": [],
          "modifiers": [],
          "content": [
            {
              "statement": "variable",
              "type": "DHT11",
              "name": "newContract",
              "value": "new DHT11(_owner)"
            },
            {
              "statement": "method_call",
              "variable": "contracts",
              "method": "push",
              "value": "newContract"
            },
            {
              "statement": "assignment",
              "variable": "counter",
              "value": {
                "statement": "expression",
                "value": "counter + 1"
              }
            }
          ]
        },
        {
          "name": "getLastContract",
          "scope": "public",
          "isConstructor": false,
          "inputs": [],
          "outputs": ["lastContract"],
          "modifiers": [],
          "content": [
            {
              "statement": "variable",
              "type": "DHT11",
              "name": "lastContract",
              "value": ""
            },
            {
              "statement": "if",
              "else": false,
              "condition": "counter > 0",
              "content": [
                {
                  "statement": "assignment",
                  "variable": "lastContract",
                  "value": {
                    "statement": "expression",
                    "value": "contracts[counter - 1]"
                  }
                }
              ]
            },
            {
              "statement": "if",
              "else": true,
              "condition": "",
              "content": [
                {
                  "statement": "assignment",
                  "variable": "lastContract",
                  "value": {
                    "statement": "expression",
                    "value": "contracts[0]"
                  }
                }
              ]
            }
          ]
        }
      ]
    }
  }
]
